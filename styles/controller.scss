@use "sass:math";
@use "sass:color";
@use "sass:selector";
@import "main";

$gap: 2rem;
$top: 33vh;
$margin-big: 80px;
$perspective: 8;

@mixin parallax($offset) {
  transition: all;
  transition-duration: inherit;
  will-change: transform;
  transform: translateX(calc(var(--swipe-translate) * $offset * 1px));
}

@mixin ancestorMatches($parent, $class) {
  @at-root #{selector.replace(&, $parent, #{$parent}#{$class})} {
    @content;
  }
}

html,
body {
  width: 100%;
  height: 100%;
  overflow: hidden;
  background-color: $color-dark;
  position: fixed;
  user-select: none;
  margin: 0;
  // color: #afafaf;
}

.swipe {
  overflow: hidden;
  visibility: hidden;
  position: relative;
  height: 100%;
  width: 100%;

  #navigation {
    $height: $margin-big;
    $dot-size: 5px;
    // background-color: red;
    position: fixed;
    height: $height;
    bottom: 0;
    left: 0px;
    right: 0px;
    // height: 40px;
    text-align: center;
    display: flex;
    align-items: center;

    .nav__buttons {
      flex: 0 0 auto;
      height: 100%;

      > div {
        position: relative;
        width: math.div($height, 2);
        height: 100%;
        display: inline-flex;
        align-items: center;
        justify-content: center;

        &::after {
          content: "";
          width: $dot-size;
          height: $dot-size;
          border: solid 1px $color-blue;
          transition: background-color $transition-duration;
        }

        &.active {
          &::after {
            background-color: $color-light;
            border-color: $color-light;
            animation: glow 1s ease-in-out infinite alternate;
          }
        }
      }
    }

    .nav__left,
    .nav__right {
      flex: 1 1 auto;
      width: 100%;
      height: 100%;
    }
  }
  .swipe-wrap {
    --swipe-translate: 0;
    --swipe-completion: 1;
    // overflow: hidden;
    position: absolute;
    height: 100%;

    .page {
      font-size: 1.1em;
      float: left;
      width: 100%;
      height: 100%;
      position: relative;
      overflow: hidden;
      color: $color-light;
      padding: $margin-big;

      h1 {
        @include textCrop;
        @include parallax(0.15);

        color: transparent;
        // -webkit-text-stroke: 1px $color-light;
        margin: 0;
        margin-bottom: $gap;
        margin-left: 0.2ch; //! correct monospace offset
        font-size: 3em;
        font-weight: lighter;
        text-align: center;
        opacity: 0;

        @include ancestorMatches(".page", ".active") {
          transition: opacity 1s 0s ease-out;
          opacity: 1;
        }

        .svg-title {
          top: -2px;
          left: 0;
          overflow: visible;
          position: absolute;
          width: 100%;
          height: 100%;
          stroke: $color-light;

          text {
            stroke-dasharray: 0 100;
            // filter: drop-shadow(0 0 2px white);

            @include ancestorMatches(".page", ".active") {
              transition: all 1s 0s ease-out;
              stroke-dasharray: 100 0;
            }
          }
        }
      }

      h2,
      h3 {
        @include textCrop;

        font-weight: lighter;
        margin: 0px;
        padding: 0px;
      }
      h2 {
        @include parallax(0.15);

        color: transparent;
        -webkit-text-stroke: 1px $color-light;
        font-size: 3em;
        margin-top: 0;
        margin-bottom: $gap;
      }
      h3 {
        @include parallax(-0.05);
        color: $color-blue;
        margin-bottom: $gap;
      }

      .instruction {
        opacity: 0;
        color: $color-blue;

        @include ancestorMatches(".page", ".active") {
          opacity: 1;
          animation: flicker 1s 2s ease-in-out infinite alternate;
          transition: opacity 1s 1s ease;
        }
      }

      .instruction,
      p {
        @include textCrop;

        margin: 0 0 $gap 0;
        white-space: pre-line;
        font-weight: 100;
      }

      p.interaction {
        @include parallax(-0.05);
        color: $color-blue;
      }

      &--home {
        padding-top: $top;
        display: flex;
        align-items: center;
        flex-direction: column;
        position: relative;
      }

      &--about {
        display: flex;
        flex-direction: column;

        .logo {
          @include parallax(0.05);
          height: 1em;
          width: 100%;
          background-repeat: no-repeat;
          background-image: url(../assets/ecal-logo-white.svg);
        }
      }

      &--student {
        padding-top: $top;

        .imageWrapper {
          @include parallax(-0.4);
          @include fullAbsolute;

          z-index: -1;
          opacity: var(--swipe-completion);
          height: calc(#{$top} + 6em);

          &::after {
            content: "";
            @include fullAbsolute;
            bottom: -2px;
            top: unset;
            height: 50%; // fix image overflow
            background: linear-gradient(
              to bottom,
              hsla(0, 0%, 0%, 0) 0%,
              hsla(0, 0%, 0%, 0.013) 8.1%,
              hsla(0, 0%, 0%, 0.049) 15.5%,
              hsla(0, 0%, 0%, 0.104) 22.5%,
              hsla(0, 0%, 0%, 0.175) 29%,
              hsla(0, 0%, 0%, 0.259) 35.3%,
              hsla(0, 0%, 0%, 0.352) 41.2%,
              hsla(0, 0%, 0%, 0.45) 47.1%,
              hsla(0, 0%, 0%, 0.55) 52.9%,
              hsla(0, 0%, 0%, 0.648) 58.8%,
              hsla(0, 0%, 0%, 0.741) 64.7%,
              hsla(0, 0%, 0%, 0.825) 71%,
              hsla(0, 0%, 0%, 0.896) 77.5%,
              hsla(0, 0%, 0%, 0.951) 84.5%,
              hsla(0, 0%, 0%, 0.987) 91.9%,
              hsl(0, 0%, 0%) 100%
            );
          }

          > img {
            @include fullAbsolute;
            object-fit: cover;
          }
        }

        .content {
          display: flex;
          flex-direction: column;
          position: relative;
        }
      }
    }
  }
}

#debug {
  width: 250px;
  background-color: $color-light;
  border-radius: 10px;
  position: fixed;
  bottom: 20px;
  left: 20px;
  padding: 20px;
  color: $color-dark;
  display: none;
}

.glow {
  // will-change: text-shadow;
  text-shadow: 0 0 0.1em color.adjust($color-blue, $alpha: -0.7);
  // animation: glowText 1s ease-in-out infinite alternate;
}

.flicker {
  animation: flicker 1s ease-in-out infinite alternate;
}

@-webkit-keyframes flicker {
  from {
    opacity: 1;
  }
  to {
    opacity: 0.33;
  }
}

@-webkit-keyframes grow {
  to {
    transform: translateX(-1ch);
  }
}

@-webkit-keyframes glowText {
  from {
    text-shadow: 0 0 3px currentColor, 0 0 10px #{$color-blue};
  }
  to {
    text-shadow: 0 0 6px currentColor, 0 0 20px #{$color-blue};
  }
}

@-webkit-keyframes glow {
  from {
    box-shadow: 0 0 5px #{$color-blue};
  }
  to {
    box-shadow: 0 0 10px #{$color-blue};
  }
}
